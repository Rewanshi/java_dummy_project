name: Java + Node CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Setup Java for Maven build
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    # Setup Node.js for TypeScript + Jest
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Install Node.js dependencies, Jest type definitions, ts-jest
    - name: Install Node.js dependencies and tools
      run: |
        npm install
        npm install --save-dev @types/jest ts-jest jest @cyclonedx/cyclonedx-npm
      working-directory: ${{ github.workspace }}

    # TypeScript compile check (no emit, just typecheck)
    - name: Run TypeScript compile check
      run: npx tsc --noEmit
      working-directory: ${{ github.workspace }}

    # Run Jest tests
    - name: Run Jest tests
      run: npm test
      working-directory: ${{ github.workspace }}

    # Run JUnit tests
    - name: Run JUnit tests
      run: mvn test
      working-directory: ${{ github.workspace }}

    # Convert JUnit XML results to SARIF
    - name: Convert JUnit results to SARIF
      run: |
        npm install --global junit-sarif
        junit-sarif-formatter target/surefire-reports/*.xml > junit-results.sarif
      working-directory: ${{ github.workspace }}

    # Upload JUnit SARIF report
    - name: Upload JUnit SARIF report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: junit-results.sarif

    # Build with Maven
    - name: Build with Maven
      run: mvn clean install
      working-directory: ${{ github.workspace }}

    # Run PMD static analysis
    - name: Run PMD static analysis
      run: mvn pmd:pmd
      working-directory: ${{ github.workspace }}

    # Generate SBOM for TypeScript project
    - name: Generate TypeScript SBOM
      run: npx @cyclonedx/cyclonedx-npm --output-file sbom.json
      working-directory: ${{ github.workspace }}

    # Upload SBOM artifact
    - name: Upload SBOM artifact
      uses: actions/upload-artifact@v4
      with:
        name: ts-sbom
        path: sbom.json

    # Install Semgrep for security/static analysis
    - name: Install Semgrep
      run: pip install semgrep

    # Run Semgrep scan
    - name: Run Semgrep scan
      run: semgrep scan --config=auto .
      working-directory: ${{ github.workspace }}


      
# name: Java + Node CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     # Setup Java for Maven build
#     - name: Set up Java
#       uses: actions/setup-java@v3
#       with:
#         distribution: 'temurin'
#         java-version: '11'

#     # Setup Node.js for TypeScript + Jest
#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '18'

#     # Install Node.js dependencies, Jest type definitions, and ts-jest
#     - name: Install Node.js dependencies and Jest type definitions
#       run: |
#         npm install
#         npm install --save-dev @types/jest ts-jest jest
#       working-directory: ${{ github.workspace }}

#     # TypeScript compile check (no emit, just typecheck)
#     - name: Run TypeScript compile check
#       run: npx tsc --noEmit
#       working-directory: ${{ github.workspace }}

#     # Run Jest tests
#     - name: Run Jest tests
#       run: npm test
#       working-directory: ${{ github.workspace }}

#     # Build with Maven
#     - name: Build with Maven
#       run: mvn clean install
#       working-directory: ${{ github.workspace }}

#     # Run PMD static analysis
#     - name: Run PMD static analysis
#       run: mvn pmd:pmd
#       working-directory: ${{ github.workspace }}

#     # Install Semgrep for security/static analysis
#     - name: Install Semgrep
#       run: pip install semgrep

#     # Run Semgrep scan
#     - name: Run Semgrep scan
#       run: semgrep scan --config=auto .
#       working-directory: ${{ github.workspace }}

# name: CI Pipeline

# on:
#   push:
#     branches: [ main, CE ]
#   pull_request:
#     branches: [ main, CE ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     # Java: Build & Test
#     - name: Set up JDK
#       uses: actions/setup-java@v3
#       with:
#         distribution: 'temurin'
#         java-version: '11'


#     - name: Build with Maven
#       run: mvn clean install



#     # JUnit Tests
#     - name: Run JUnit tests
#       run: mvn test

#     # TypeScript: Install & Test
#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '18'

#     - name: Install Node.js dependencies
#       run: npm install

#     - name: Run TypeScript build
#       run: npm run build

#     - name: Run Jest tests
#       run: npm test

#     # ts-scan (dummy placeholder)
#     - name: Run ts-scan (placeholder)
#       run: echo "Running ts-scan..."

#     # PMD Scan
#     - name: Run PMD
#       run: |
#         wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.55.0/pmd-bin-6.55.0.zip
#         unzip pmd-bin-6.55.0.zip
#         ./pmd-bin-6.55.0/bin/run.sh pmd -d src/ -R rulesets/java/quickstart.xml -f text

#     # Semgrep Scan
#     - name: Run Semgrep
#       run: |
#         pip install semgrep
#         semgrep scan --config auto .

#     # SpotBugs + FindBugs (optional)
#     - name: Run SpotBugs (optional)
#       run: |
#         echo "Skipping SpotBugs (setup needed)"
